// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/keyjin88/shortener/internal/app/service (interfaces: URLRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockURLRepository is a mock of URLRepository interface.
type MockURLRepository struct {
	ctrl     *gomock.Controller
	recorder *MockURLRepositoryMockRecorder
}

// MockURLRepositoryMockRecorder is the mock recorder for MockURLRepository.
type MockURLRepositoryMockRecorder struct {
	mock *MockURLRepository
}

// NewMockURLRepository creates a new mock instance.
func NewMockURLRepository(ctrl *gomock.Controller) *MockURLRepository {
	mock := &MockURLRepository{ctrl: ctrl}
	mock.recorder = &MockURLRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLRepository) EXPECT() *MockURLRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockURLRepository) Create(arg0, arg1 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Create", arg0, arg1)
}

// Create indicates an expected call of Create.
func (mr *MockURLRepositoryMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockURLRepository)(nil).Create), arg0, arg1)
}

// FindByShortenedString mocks base method.
func (m *MockURLRepository) FindByShortenedString(arg0 string) (string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByShortenedString", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// FindByShortenedString indicates an expected call of FindByShortenedString.
func (mr *MockURLRepositoryMockRecorder) FindByShortenedString(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByShortenedString", reflect.TypeOf((*MockURLRepository)(nil).FindByShortenedString), arg0)
}
